version: '3.8'

services:
  # FastAPI应用 - 关山智能系统
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: guanshan-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # 基础配置
      APP_NAME: "关山智能系统"
      VERSION: "1.0.0"
      DEBUG: "true"
      LOG_LEVEL: "INFO"
      HOST: "0.0.0.0"
      PORT: "8000"
      
      # 数据库连接
      MONGODB_URL: mongodb://admin:password123@mongodb:27017/intelligent_system?authSource=admin
      MARIADB_URL: mysql://app_user:apppass123@mariadb:3306/intelligent_system
      REDIS_URL: redis://redis:6379/0
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672/
      QDRANT_URL: http://qdrant:6333
      
      # Firecrawl配置 - 从.env文件读取
      FIRECRAWL_API_KEY: ${FIRECRAWL_API_KEY}
      FIRECRAWL_TIMEOUT: "30"
      FIRECRAWL_MAX_RETRIES: "3"
    
    depends_on:
      - mongodb
      - mariadb
      - redis
      - rabbitmq
      - qdrant
    
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    
    networks:
      - intelligent_network

  # MongoDB - 文档数据库
  mongodb:
    image: mongo:7.0
    container_name: intelligent_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: intelligent_system
    volumes:
      - mongo_data:/data/db
    networks:
      - intelligent_network

  # MariaDB - 关系数据库
  mariadb:
    image: mariadb:11
    container_name: intelligent_mariadb
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpass123
      MYSQL_DATABASE: intelligent_system
      MYSQL_USER: app_user
      MYSQL_PASSWORD: apppass123
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - intelligent_network

  # Redis - 缓存
  redis:
    image: redis:7-alpine
    container_name: intelligent_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - intelligent_network

  # RabbitMQ - 消息队列
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: intelligent_rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP端口
      - "15672:15672" # 管理界面端口
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - intelligent_network

  # Qdrant - 向量数据库
  qdrant:
    image: qdrant/qdrant:latest
    container_name: intelligent_qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"   # REST API
      - "6334:6334"   # gRPC
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - intelligent_network

volumes:
  mongo_data:
    driver: local
  mariadb_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  intelligent_network:
    driver: bridge